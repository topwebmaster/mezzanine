# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009 - 2014, Stephen McDonald
# This file is distributed under the same license as the Mezzanine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mezzanine 3.1.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-03 10:42+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../device-handling.rst:3
# 41cae5e804c242ac9013618c891449ad
msgid "Device Handling"
msgstr ""

#: ../device-handling.rst:5
# 071cf06b749b4bf28fd8a46226d82053
msgid "Mezzanine comes with the ability to use different sets of templates depending on the device being used to access the website. For example one set of templates may be used for desktop browsers with a corresponding set of templates being used for mobile phones."
msgstr ""

#: ../device-handling.rst:10
# be55b07572484f9f9ca528f521bbe97c
msgid "Devices are grouped into types with each type being named after the sub-directory containing its specific set of templates. Each device is then defined by a list of strings that could be found in the user agent that matches the particular device. This mapping of device sub-directory names to user agent strings is defined in the setting ``DEVICE_USER_AGENTS``::"
msgstr ""

#: ../device-handling.rst:21
# c673bbaf528346e78389ec255e0c4d04
msgid "Given the above example value for ``DEVICE_USER_AGENTS``, suppose a view or template referenced the template ``blog/index.html``. If an iPhone made the request to the website, the template ``mobile/blog/index.html`` would be searched for, and if a Windows OS made the request then the template ``desktop/blog/index.html`` would be searched for."
msgstr ""

#: ../device-handling.rst:29
# ae830831fa9c426a9c4076072b2e72f9
msgid "If the device specific templates don't exist or a user agent isn't matched to any of the device specific strings, then the original template name (``blog/index.html`` in the above example) will be used as per usual with Django. This means that supporting device specific templates is entirely optional."
msgstr ""

#: ../device-handling.rst:35
# 40a99eae0b194709ad64ec64df4a7d38
msgid "You can also specify which device should be treated as the default by defining the setting ``DEVICE_DEFAULT``. For example to ensure templates for the ``mobile`` device group are used even when no matching user agent is found, simply define the following in your project's ``settings`` module::"
msgstr ""

#: ../device-handling.rst:44
# 98c8e523fe0142f986a11e3435d62376
msgid "Mobile Theme"
msgstr ""

#: ../device-handling.rst:46
# fb3db72e6f3642e29a5a1200e3caa295
msgid "Mezzanine includes the app ``mezzanine.mobile`` which contains a full set of default templates and assets for creating a mobile version of your site. Simply add ``mezzanine.mobile`` to your ``INSTALLED_APPS`` setting to use it."
msgstr ""

#: ../device-handling.rst:52
# f41395faa25f4f048da23d944d8a6854
msgid "Implementation Considerations"
msgstr ""

#: ../device-handling.rst:54
# a702ed2f7f22490bbd7b1a88bee49918
msgid "Using the ``DEVICE_USER_AGENTS`` setting, Mezzanine simply prefixes any referenced template path with the device specific sub-directory name if a user agent matches one of the strings specified for the device. For example if a user agent matches the ``mobile`` device set of templates, a reference to ``blog/index.html`` will be changed to the list ``[\"mobile/blog/index.html\", \"blog/index.html\"]`` under the hood."
msgstr ""

#: ../device-handling.rst:61
# 0ff554e0aa8e4144af6d6c6c882b5ae4
msgid "To achieve this, the middleware ``mezzanine.core.middleware.TemplateForDeviceMiddleware`` catches Django ``TemplateResponse`` responses, and changes the template list prior to the response being rendered. As such, any views you implement should return ``TemplateResponse`` objects. The table below lists Mezzanine versions of Django features that can be used to ensure a ``TemplateResponse`` is returned."
msgstr ""

#: ../device-handling.rst:70
# a2d01bf1a0c74576af9afebc4e761ba2
msgid "Django"
msgstr ""

#: ../device-handling.rst:70
# f120a7ba56944cc59b18e461833cd84a
msgid "Mezzanine"
msgstr ""

#: ../device-handling.rst:72
# 366e9e3e162a499bb3a3316cea0cd6aa
msgid "``django.shortcuts.render``"
msgstr ""

#: ../device-handling.rst:72
# 03061e149d0747a1ade701d852bbbec6
msgid "``mezzanine.utils.views.render``"
msgstr ""

#: ../device-handling.rst:73
# fc109fb0bc244ba691fa6af0eea26117
msgid "``django.template.Library().inclusion_tag``"
msgstr ""

#: ../device-handling.rst:73
# 59765e9f1ca4472784ff6428aa381819
msgid "``mezzanine.template.Library().inclusion_tag``"
msgstr ""

#: ../device-handling.rst:74
# 84a68ebea6ea4d75ab852345f61f47e1
msgid "``django.views.generic.simple.direct_to_template``"
msgstr ""

#: ../device-handling.rst:74
# 63786ccac7994e309512c1266e5c0921
msgid "``mezzanine.core.views.direct_to_template``"
msgstr ""

